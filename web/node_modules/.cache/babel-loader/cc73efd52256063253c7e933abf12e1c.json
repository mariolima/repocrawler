{"ast":null,"code":"import _classCallCheck from\"/home/msclima/go/src/github.com/mariolima/repocrawler/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/msclima/go/src/github.com/mariolima/repocrawler/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/msclima/go/src/github.com/mariolima/repocrawler/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/msclima/go/src/github.com/mariolima/repocrawler/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/msclima/go/src/github.com/mariolima/repocrawler/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import'./crawl_info.css';import FlexView from'react-flexview';// import LineChart from './line_chart.js';\nimport FilterButton from'./filter_button.js';var Pulse=/*#__PURE__*/function(_Component){_inherits(Pulse,_Component);function Pulse(props){var _this;_classCallCheck(this,Pulse);_this=_possibleConstructorReturn(this,_getPrototypeOf(Pulse).call(this,props));_this.handleMouseEnter=function(){_this.setState({isHovering:true});_this.props.onHover(_this.state.host);};_this.handleMouseLeave=function(){_this.setState({isHovering:false});};_this.handleRegexTick=function(regex){console.log(\"Ticking \"+regex);_this.props.tickRegex(regex);};_this.state={isHovering:false,host:_this.props.host};return _this;}_createClass(Pulse,[{key:\"render\",value:function render(){var regexes=this.props.regexes;var matches=this.props.matches;var crawlstate=this.props.crawlstate;// testing \nreturn React.createElement(\"div\",{className:\"CrawlInfo\"},React.createElement(FlexView,{grow:1,shrink:4},React.createElement(\"div\",null,React.createElement(\"h3\",null,\"Matches Found\"),React.createElement(\"h1\",null,matches.length)),React.createElement(\"verticalLine\",null),React.createElement(\"div\",null,React.createElement(\"h3\",null,\"Repos analysed\"),React.createElement(\"h1\",null,crawlstate&&crawlstate.length>0?crawlstate[0].AnalysedRepos.length:0)),React.createElement(\"verticalLine\",null),React.createElement(\"div\",null,React.createElement(\"h3\",null,\"Crawling\"),React.createElement(\"h1\",null,crawlstate&&crawlstate.length>0?crawlstate[0].Crawling.length:0)),React.createElement(\"verticalLine\",null),React.createElement(\"div\",null,crawlstate&&crawlstate.length>0&&crawlstate[0].Crawling&&crawlstate[0].Crawling[0]?crawlstate.map(function(task,index){return task.Crawling.map(function(repo,index){return React.createElement(\"div\",null,repo.Name);});}):\"[repo list]\")));/*     return(\n      <div className=\"CrawlInfo\">\n        <h2>Pulse</h2>\n        <FlexView grow={1} shrink={4}>\n          <div>\n            <h3>Matches Found</h3>\n            <h1>{matches.length}</h1>\n          </div>\n          <verticalLine/>\n          <div>\n            <h3>Repos analysed</h3>\n            <h1>{0}</h1>\n          </div>\n          <verticalLine/>\n          {\n              Object.keys(regexes).map((regex) =>\n                  <FilterButton\n                    handleClick={this.handleRegexTick}\n                    reg={regex}\n                    ticked={regexes[regex].Ticked}\n                    count={regexes[regex].Count}\n                    />,\n              )\n          }\n        </FlexView>\n      </div>\n    ) */}}]);return Pulse;}(Component);export default Pulse;","map":{"version":3,"sources":["/home/msclima/go/src/github.com/mariolima/repocrawler/web/src/crawl_info/pulse.js"],"names":["React","Component","FlexView","FilterButton","Pulse","props","handleMouseEnter","setState","isHovering","onHover","state","host","handleMouseLeave","handleRegexTick","regex","console","log","tickRegex","regexes","matches","crawlstate","length","AnalysedRepos","Crawling","map","task","index","repo","Name"],"mappings":"83BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAO,kBAAP,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,CACA;AACA,MAAOC,CAAAA,YAAP,KAAyB,oBAAzB,C,GAEMC,CAAAA,K,+DAEJ,eAAYC,KAAZ,CAAmB,uCACjB,uEAAMA,KAAN,GADiB,MAQnBC,gBARmB,CAQA,UAAM,CACrB,MAAKC,QAAL,CAAc,CAACC,UAAU,CAAC,IAAZ,CAAd,EACA,MAAKH,KAAL,CAAWI,OAAX,CAAmB,MAAKC,KAAL,CAAWC,IAA9B,EACH,CAXkB,OAanBC,gBAbmB,CAaA,UAAM,CACrB,MAAKL,QAAL,CAAc,CAACC,UAAU,CAAC,KAAZ,CAAd,EACH,CAfkB,OAiBnBK,eAjBmB,CAiBD,SAACC,KAAD,CAAW,CACzBC,OAAO,CAACC,GAAR,CAAY,WAAWF,KAAvB,EACA,MAAKT,KAAL,CAAWY,SAAX,CAAqBH,KAArB,EACH,CApBkB,CAEjB,MAAKJ,KAAL,CAAa,CACXF,UAAU,CAAE,KADD,CAEXG,IAAI,CAAE,MAAKN,KAAL,CAAWM,IAFN,CAAb,CAFiB,aAMlB,C,yDAgBO,CACN,GAAIO,CAAAA,OAAO,CAAC,KAAKb,KAAL,CAAWa,OAAvB,CACA,GAAIC,CAAAA,OAAO,CAAC,KAAKd,KAAL,CAAWc,OAAvB,CACA,GAAIC,CAAAA,UAAU,CAAC,KAAKf,KAAL,CAAWe,UAA1B,CACA;AAEA,MACE,4BAAK,SAAS,CAAC,WAAf,EACA,oBAAC,QAAD,EAAU,IAAI,CAAE,CAAhB,CAAmB,MAAM,CAAE,CAA3B,EACI,+BACE,8CADF,CAEE,8BAAKD,OAAO,CAACE,MAAb,CAFF,CADJ,CAKI,wCALJ,CAMI,+BACE,+CADF,CAEE,8BAAMD,UAAU,EAAIA,UAAU,CAACC,MAAX,CAAkB,CAAjC,CAAqCD,UAAU,CAAC,CAAD,CAAV,CAAcE,aAAd,CAA4BD,MAAjE,CAAwE,CAA7E,CAFF,CANJ,CAUI,wCAVJ,CAWI,+BACE,yCADF,CAEE,8BAAMD,UAAU,EAAIA,UAAU,CAACC,MAAX,CAAkB,CAAjC,CAAsCD,UAAU,CAAC,CAAD,CAAV,CAAcG,QAAd,CAAuBF,MAA7D,CAAoE,CAAzE,CAFF,CAXJ,CAeI,wCAfJ,CAgBI,+BACCD,UAAU,EAAIA,UAAU,CAACC,MAAX,CAAkB,CAAhC,EAAqCD,UAAU,CAAC,CAAD,CAAV,CAAcG,QAAnD,EAA+DH,UAAU,CAAC,CAAD,CAAV,CAAcG,QAAd,CAAuB,CAAvB,CAA/D,CACCH,UAAU,CAACI,GAAX,CAAe,SAACC,IAAD,CAAOC,KAAP,QACZD,CAAAA,IAAI,CAACF,QAAL,CAAcC,GAAd,CAAkB,SAACG,IAAD,CAAOD,KAAP,QACf,gCAAMC,IAAI,CAACC,IAAX,CADe,EAAlB,CADY,EAAf,CADD,CAOG,aARJ,CAhBJ,CADA,CADF,CAgCJ;;;;;;;;;;;;;;;;;;;;;;;;;;QA2BG,C,mBAzFiB3B,S,EA4FpB,cAAeG,CAAAA,KAAf","sourcesContent":["import React, { Component } from 'react'\nimport './crawl_info.css'\nimport FlexView from 'react-flexview';\n// import LineChart from './line_chart.js';\nimport FilterButton from './filter_button.js';\n\nclass Pulse extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isHovering: false,\n      host: this.props.host,\n    };\n  }\n\n  handleMouseEnter = () => {\n      this.setState({isHovering:true})\n      this.props.onHover(this.state.host);            \n  }\n\n  handleMouseLeave = () => {\n      this.setState({isHovering:false})         \n  }\n\n  handleRegexTick = (regex) => {\n      console.log(\"Ticking \"+regex)\n      this.props.tickRegex(regex)         \n  }\n\n  render(){\n    let regexes=this.props.regexes\n    let matches=this.props.matches\n    let crawlstate=this.props.crawlstate\n    // testing \n\n    return(\n      <div className=\"CrawlInfo\">\n      <FlexView grow={1} shrink={4}>\n          <div>\n            <h3>Matches Found</h3>\n            <h1>{matches.length}</h1>\n          </div>\n          <verticalLine/>\n          <div>\n            <h3>Repos analysed</h3>\n            <h1>{(crawlstate && crawlstate.length>0)? crawlstate[0].AnalysedRepos.length:0}</h1>\n          </div>\n          <verticalLine/>\n          <div>\n            <h3>Crawling</h3>\n            <h1>{(crawlstate && crawlstate.length>0) ? crawlstate[0].Crawling.length:0}</h1>\n          </div>\n          <verticalLine/>\n          <div>\n          {crawlstate && crawlstate.length>0 && crawlstate[0].Crawling && crawlstate[0].Crawling[0] ?\n            crawlstate.map((task, index) =>\n               task.Crawling.map((repo, index) =>\n                  <div>{repo.Name}</div>\n               )\n            )\n            :\n              \"[repo list]\"\n          } \n          </div>\n          </FlexView>\n      </div>\n    )\n/*     return(\n      <div className=\"CrawlInfo\">\n        <h2>Pulse</h2>\n        <FlexView grow={1} shrink={4}>\n          <div>\n            <h3>Matches Found</h3>\n            <h1>{matches.length}</h1>\n          </div>\n          <verticalLine/>\n          <div>\n            <h3>Repos analysed</h3>\n            <h1>{0}</h1>\n          </div>\n          <verticalLine/>\n          {\n              Object.keys(regexes).map((regex) =>\n                  <FilterButton\n                    handleClick={this.handleRegexTick}\n                    reg={regex}\n                    ticked={regexes[regex].Ticked}\n                    count={regexes[regex].Count}\n                    />,\n              )\n          }\n        </FlexView>\n      </div>\n    ) */\n  }\n}\n\nexport default Pulse\n"]},"metadata":{},"sourceType":"module"}