{"version":3,"file":"index.js","sources":["../src/color.js","../src/layout.js","../src/typography.js","../src/flexbox.js","../src/border.js","../src/background.js","../src/grid.js","../src/position.js","../src/styles.js","../src/shim.js"],"sourcesContent":["import { system } from '@styled-system/core'\n\n// move to @styled-system/color package\nconst config = {\n  color: {\n    property: 'color',\n    scale: 'colors',\n  },\n  backgroundColor: {\n    property: 'backgroundColor',\n    scale: 'colors',\n  }\n}\nconfig.bg = config.backgroundColor\n\nexport const color = system(config)\nexport default color\n","// @styled-system/layout\nimport { system, get } from '@styled-system/core'\n\nconst isNumber = n => typeof n === 'number' && !isNaN(n)\nconst getWidth = (n, scale) => get(scale, n, (!isNumber(n) || n > 1 ? n : n * 100 + '%'))\n\nconst config = {\n  width: {\n    property: 'width',\n    scale: 'sizes',\n    transform: getWidth\n  },\n  height: {\n    property: 'height',\n    scale: 'sizes',\n  },\n  minWidth: {\n    property: 'minWidth',\n    scale: 'sizes',\n  },\n  minHeight: {\n    property: 'minHeight',\n    scale: 'sizes',\n  },\n  maxWidth: {\n    property: 'maxWidth',\n    scale: 'sizes',\n  },\n  maxHeight: {\n    property: 'maxHeight',\n    scale: 'sizes',\n  },\n  display: true,\n  verticalAlign: true,\n  size: {\n    properties: [\n      'width',\n      'height',\n    ],\n    scale: 'sizes'\n  },\n}\n\nexport const layout = system(config)\nexport default layout\n","// @styled-system/typography\nimport { system } from '@styled-system/core'\n\nconst defaults = {\n  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64, 72],\n}\n\nconst config = {\n  fontSize: {\n    property: 'fontSize',\n    scale: 'fontSizes',\n    defaultScale: defaults.fontSizes,\n  },\n  fontWeight: {\n    property: 'fontWeight',\n    scale: 'fontWeights',\n  },\n  lineHeight: {\n    property: 'lineHeight',\n    scale: 'lineHeights',\n  },\n  letterSpacing: {\n    property: 'letterSpacing',\n    scale: 'letterSpacings',\n  },\n  fontStyle: true,\n  textAlign: true,\n}\n\nexport const typography = system(config)\nexport default typography\n","// @styled-system/flexbox\nimport { system } from '@styled-system/core'\n\nconst config = {\n  alignItems: true,\n  alignContent: true,\n  justifyItems: true,\n  justifyContent: true,\n  flexWrap: true,\n  flexDirection: true,\n  // item\n  flex: true,\n  flexGrow: true,\n  flexShrink: true,\n  flexBasis: true,\n  justifySelf: true,\n  alignSelf: true,\n  order: true,\n}\n\nexport const flexbox = system(config)\n\nexport default flexbox\n","// @styled-system/border\nimport { system } from '@styled-system/core'\n\nconst config = {\n  border: {\n    property: 'border',\n    scale: 'borders',\n  },\n  borderWidth: {\n    property: 'borderWidth',\n    scale: 'borderWidths',\n  },\n  borderStyle: {\n    property: 'borderStyle',\n    scale: 'borderStyles',\n  },\n  borderColor: {\n    property: 'borderColor',\n    scale: 'colors',\n  },\n  borderRadius: {\n    property: 'borderRadius',\n    scale: 'radii',\n  },\n  borderTop: {\n    property: 'borderTop',\n    scale: 'borders',\n  },\n  borderRight: {\n    property: 'borderRight',\n    scale: 'borders',\n  },\n  borderBottom: {\n    property: 'borderBottom',\n    scale: 'borders',\n  },\n  borderLeft: {\n    property: 'borderLeft',\n    scale: 'borders',\n  },\n  borderX: {\n    properties: [\n      'borderLeft',\n      'borderRight',\n    ],\n    scale: 'borders',\n  },\n  borderY: {\n    properties: [\n      'borderTop',\n      'borderBottom',\n    ],\n    scale: 'borders',\n  },\n}\n\nexport const border = system(config)\n\nexport default border\n","// @styled-system/background\nimport { system } from '@styled-system/core'\n\nconst config = {\n  background: true,\n  backgroundImage: true,\n  backgroundSize: true,\n  backgroundPosition: true,\n  backgroundRepeat: true,\n}\n\nconfig.bgImage = config.backgroundImage\nconfig.bgSize = config.backgroundSize\nconfig.bgPosition = config.backgroundPosition\nconfig.bgRepeat = config.backgroundRepeat\n\nexport const background = system(config)\n\nexport default background\n","// @styled-system/grid\nimport { system } from '@styled-system/core'\n\n// todo\nconst defaults = {\n  space: [0, 4, 8, 16, 32, 64, 128, 256, 512],\n}\n\nconst config = {\n  gridGap: {\n    property: 'gridGap',\n    scale: 'space',\n    defaultScale: defaults.space,\n  },\n  gridColumnGap: {\n    property: 'gridColumnGap',\n    scale: 'space',\n    defaultScale: defaults.space,\n  },\n  gridRowGap: {\n    property: 'gridRowGap',\n    scale: 'space',\n    defaultScale: defaults.space,\n  },\n  gridColumn: true,\n  gridRow: true,\n  gridAutoFlow: true,\n  gridAutoColumns: true,\n  gridAutoRows: true,\n  gridTemplateColumns: true,\n  gridTemplateRows: true,\n  gridTemplateAreas: true,\n  gridArea: true,\n}\n\nexport const grid = system(config)\nexport default grid\n","// @styled-system/position\nimport { system } from '@styled-system/core'\n\nconst config = {\n  position: true,\n  zIndex: {\n    property: 'zIndex',\n    scale: 'zIndices',\n  },\n  top: true,\n  right: true,\n  bottom: true,\n  left: true,\n}\n\nexport const position = system(config)\n\nexport default position\n","import { system } from '@styled-system/core'\nimport { variant } from '@styled-system/variant'\n\nexport const boxShadow = system({\n  boxShadow: {\n    property: 'boxShadow',\n    scale: 'shadows',\n  }\n})\n\nexport const opacity = system({ opacity: true })\nexport const overflow = system({ overflow: true })\n\n// variants\nexport const buttonStyle = variant({ key: 'buttons' })\nexport const textStyle = variant({ key: 'textStyles', prop: 'textStyle' })\nexport const colorStyle = variant({ key: 'colorStyles', prop: 'colors' })\n","import {\n  createStyleFunction,\n  createParser\n} from '@styled-system/core'\n\n// v4 API shim\nexport const style = ({\n  prop,\n  cssProperty,\n  alias,\n  key,\n  transformValue,\n  scale,\n  // new api\n  properties,\n}) => {\n  const config = {}\n  config[prop] = createStyleFunction({\n    properties,\n    property: cssProperty || prop,\n    scale: key,\n    defaultScale: scale,\n    transform: transformValue,\n  })\n  if (alias) config[alias] = config[prop]\n  const parse = createParser(config)\n\n  return parse\n}\n"],"names":["config","color","property","scale","backgroundColor","bg","system","width","transform","n","get","isNaN","isNumber","height","minWidth","minHeight","maxWidth","maxHeight","display","verticalAlign","size","properties","layout","typography","fontSize","defaultScale","fontWeight","lineHeight","letterSpacing","fontStyle","textAlign","flexbox","alignItems","alignContent","justifyItems","justifyContent","flexWrap","flexDirection","flex","flexGrow","flexShrink","flexBasis","justifySelf","alignSelf","order","border","borderWidth","borderStyle","borderColor","borderRadius","borderTop","borderRight","borderBottom","borderLeft","borderX","borderY","background","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","bgImage","bgSize","bgPosition","bgRepeat","defaults","space","grid","gridGap","gridColumnGap","gridRowGap","gridColumn","gridRow","gridAutoFlow","gridAutoColumns","gridAutoRows","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","gridArea","position","zIndex","top","right","bottom","left","boxShadow","opacity","overflow","buttonStyle","variant","key","textStyle","prop","colorStyle","ref","createStyleFunction","alias","createParser"],"mappings":"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"}