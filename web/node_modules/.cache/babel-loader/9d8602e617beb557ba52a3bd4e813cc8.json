{"ast":null,"code":"var _jsxFileName = \"/home/msclima/dwns/repocrawler/src/crawl_info/pulse.js\";\nimport React, { Component } from 'react';\nimport './crawl_info.css';\nimport FlexView from 'react-flexview'; // import LineChart from './line_chart.js';\n\nimport FilterButton from './filter_button.js';\n\nclass Pulse extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleMouseEnter = () => {\n      this.setState({\n        isHovering: true\n      });\n      this.props.onHover(this.state.host);\n    };\n\n    this.handleMouseLeave = () => {\n      this.setState({\n        isHovering: false\n      });\n    };\n\n    this.handleRegexTick = regex => {\n      console.log(\"Ticking \" + regex);\n      this.props.tickRegex(regex);\n    };\n\n    this.state = {\n      isHovering: false,\n      host: this.props.host\n    };\n  }\n\n  render() {\n    let regexes = this.props.regexes;\n    let matches = this.props.matches;\n    let crawlstate = this.props.crawlstate; // testing \n\n    return React.createElement(\"div\", {\n      className: \"CrawlInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(FlexView, {\n      grow: 1,\n      shrink: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Matches Found\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, matches.length)), React.createElement(\"verticalLine\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Repos analysed\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, crawlstate && crawlstate.length > 0 ? crawlstate[0].AnalysedRepos.length : 0)), React.createElement(\"verticalLine\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Crawling\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, crawlstate && crawlstate.length > 0 ? crawlstate[0].Crawling.length : 0)), React.createElement(\"verticalLine\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, crawlstate && crawlstate.length > 0 && crawlstate[0].Crawling && crawlstate[0].Crawling[0] ? crawlstate.map((task, index) => task.Crawling.map((repo, index) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, repo.Name))) : \"[repo list]\")));\n    /*     return(\n          <div className=\"CrawlInfo\">\n            <h2>Pulse</h2>\n            <FlexView grow={1} shrink={4}>\n              <div>\n                <h3>Matches Found</h3>\n                <h1>{matches.length}</h1>\n              </div>\n              <verticalLine/>\n              <div>\n                <h3>Repos analysed</h3>\n                <h1>{0}</h1>\n              </div>\n              <verticalLine/>\n              {\n                  Object.keys(regexes).map((regex) =>\n                      <FilterButton\n                        handleClick={this.handleRegexTick}\n                        reg={regex}\n                        ticked={regexes[regex].Ticked}\n                        count={regexes[regex].Count}\n                        />,\n                  )\n              }\n            </FlexView>\n          </div>\n        ) */\n  }\n\n}\n\nexport default Pulse;","map":{"version":3,"sources":["/home/msclima/dwns/repocrawler/src/crawl_info/pulse.js"],"names":["React","Component","FlexView","FilterButton","Pulse","constructor","props","handleMouseEnter","setState","isHovering","onHover","state","host","handleMouseLeave","handleRegexTick","regex","console","log","tickRegex","render","regexes","matches","crawlstate","length","AnalysedRepos","Crawling","map","task","index","repo","Name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './crawl_info.css'\nimport FlexView from 'react-flexview';\n// import LineChart from './line_chart.js';\nimport FilterButton from './filter_button.js';\n\nclass Pulse extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isHovering: false,\n      host: this.props.host,\n    };\n  }\n\n  handleMouseEnter = () => {\n      this.setState({isHovering:true})\n      this.props.onHover(this.state.host);            \n  }\n\n  handleMouseLeave = () => {\n      this.setState({isHovering:false})         \n  }\n\n  handleRegexTick = (regex) => {\n      console.log(\"Ticking \"+regex)\n      this.props.tickRegex(regex)         \n  }\n\n  render(){\n    let regexes=this.props.regexes\n    let matches=this.props.matches\n    let crawlstate=this.props.crawlstate\n    // testing \n\n    return(\n      <div className=\"CrawlInfo\">\n      <FlexView grow={1} shrink={4}>\n          <div>\n            <h3>Matches Found</h3>\n            <h1>{matches.length}</h1>\n          </div>\n          <verticalLine/>\n          <div>\n            <h3>Repos analysed</h3>\n            <h1>{(crawlstate && crawlstate.length>0)? crawlstate[0].AnalysedRepos.length:0}</h1>\n          </div>\n          <verticalLine/>\n          <div>\n            <h3>Crawling</h3>\n            <h1>{(crawlstate && crawlstate.length>0) ? crawlstate[0].Crawling.length:0}</h1>\n          </div>\n          <verticalLine/>\n          <div>\n          {crawlstate && crawlstate.length>0 && crawlstate[0].Crawling && crawlstate[0].Crawling[0] ?\n            crawlstate.map((task, index) =>\n               task.Crawling.map((repo, index) =>\n                  <div>{repo.Name}</div>\n               )\n            )\n            :\n              \"[repo list]\"\n          } \n          </div>\n          </FlexView>\n      </div>\n    )\n/*     return(\n      <div className=\"CrawlInfo\">\n        <h2>Pulse</h2>\n        <FlexView grow={1} shrink={4}>\n          <div>\n            <h3>Matches Found</h3>\n            <h1>{matches.length}</h1>\n          </div>\n          <verticalLine/>\n          <div>\n            <h3>Repos analysed</h3>\n            <h1>{0}</h1>\n          </div>\n          <verticalLine/>\n          {\n              Object.keys(regexes).map((regex) =>\n                  <FilterButton\n                    handleClick={this.handleRegexTick}\n                    reg={regex}\n                    ticked={regexes[regex].Ticked}\n                    count={regexes[regex].Count}\n                    />,\n              )\n          }\n        </FlexView>\n      </div>\n    ) */\n  }\n}\n\nexport default Pulse\n"]},"metadata":{},"sourceType":"module"}