{"version":3,"sources":["debug/DebugMessage.js","debug/Debug.js","matches/Match.js","matches/Matches.js","crawl_info/filter_button.js","crawl_info/pulse.js","App.js","index.js"],"names":["name","message","level","msg","Debug","className","this","props","logs","slice","map","index","DebugMessage","key","event","Component","Match","handleMouseEnter","setState","isHovering","onHover","state","match","handleMouseLeave","handleMouseClick","window","open","URL","numberOfLines","onMouseEnter","onMouseLeave","Entropy","Rule","Type","toFixed","Regex","highlightClassName","searchWords","Values","autoEscape","textToHighlight","Line","onClick","Matches","handleHover","selectedMatch","hoveredMatch","filterMatch","filters","Ticked","matches","inmatch","Pulse","host","handleRegexTick","regex","console","log","tickRegex","regexes","crawlstate","grow","shrink","length","AnalysedRepos","Crawling","task","repo","Name","simulationOptions","height","width","animate","strength","collide","labelAttr","onSelectNode","node","highlightDependencies","id","fill","label","link","source","target","App","ws","WebSocket","status","setSelectedMatch","selected_match","tickRegexFilter","addMessage","push","setCrawlingState","cr","addMatch","Count","submitMessage","messageString","send","JSON","stringify","onopen","onmessage","evt","parse","data","onclose","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06bbea56.chunk.js","sourcesContent":["import React from 'react'\n\nexport default ({ name, message }) =>\n  <section>[{message.level}] {message.msg}</section>","import React, { Component } from 'react'\nimport './debug.css'\nimport DebugMessage from './DebugMessage'\n\nconst logsToShow=7\nclass Debug extends Component {\n  componentDidMount() {\n      \n  }\n\n  render() {\n    return (\n    <div className=\"Debug\">\n      <h2>Debug</h2>\n        {this.props.logs.slice(-logsToShow).map((message, index) => <DebugMessage\n            key={index}\n            message={message}\n            name={message.event}\n          />\n        )}\n    </div>\n    )\n  }\n}\nexport default Debug","import React, { Component } from 'react'\nimport { Line, Circle } from 'rc-progress';\nimport Highlighter from \"react-highlight-words\";\nimport './match.css'\n\n\nclass Match extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isHovering: false,\n      match: this.props.match,\n    };\n  }\n\n  handleMouseEnter = () => {\n      this.setState({isHovering:true})\n      this.props.onHover(this.state.match);            \n  }\n\n  handleMouseLeave = () => {\n      this.setState({isHovering:false})         \n  }\n\n  handleMouseLeave = () => {\n      this.setState({isHovering:false})         \n  }\n\n  handleMouseClick = () => {\n        var win = window.open(this.state.match.URL, '_blank');         \n  }\n\n  render(){\n    // let domain=this.props.domain\n    let match=this.props.match\n\n    return(\n      <div className=\"Match\"\n          numberOfLines={1}\n          onMouseEnter={this.handleMouseEnter}\n          onMouseLeave={this.handleMouseLeave}\n          >\n        [<b className={match.Entropy < 4.20 ? \"match_type_a\": \"match_type_critical\"}>{match.Rule.Type}</b>][{(match.Entropy).toFixed(2)}][{match.Rule.Regex}]<Highlighter\n          highlightClassName=\"match_value\"\n          searchWords={match.Values}\n          autoEscape={true}\n          textToHighlight={match.Line}\n          onClick={this.handleMouseClick}\n        />\n        { this.state.isHovering\n        }\n      </div>\n    )\n  }\n}\n\nexport default Match\n","import React, { Component } from 'react'\nimport './matches.css'\nimport Match from './Match'\n\nclass Matches extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      hoveredMatch: \"\",\n    };\n  }\n\n  handleHover = (match) => {\n        this.props.selectedMatch(match)\n        this.setState({hoveredMatch: match});\n  }\n\n  filterMatch = (match) => {\n    return this.props.filters[match.Rule.Regex].Ticked\n  }\n\n  render() {\n    return (\n    <pre className=\"Matches\">\n      <h2>Matches</h2>\n      <div className=\"scroller\">\n        {this.props.matches.map((inmatch) => \n          this.filterMatch(inmatch) && <Match \n              onHover={this.handleHover}\n              match={inmatch}\n            />,\n        )}\n      </div>\n    </pre>\n    )\n  }\n}\nexport default Matches","import React, { Component } from 'react'\nimport './crawl_info.css'\n\nclass FilterButton extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      regex:'',\n    };\n  }\n\n  handleMouseClick = () => {\n      this.props.handleClick(this.props.reg)     \n  }\n\n  render() {\n    let regex=this.props.reg\n    let count=this.props.count\n    let ticked=this.props.ticked\n    return (\n      <button onClick={this.handleMouseClick}>[{regex}]:{count}</button>\n    )\n  }\n}\nexport default FilterButton","import React, { Component } from 'react'\nimport './crawl_info.css'\nimport FlexView from 'react-flexview';\n// import LineChart from './line_chart.js';\nimport FilterButton from './filter_button.js';\nimport {InteractiveForceGraph, ForceGraphNode, ForceGraphLink} from 'react-vis-force';\n\nclass Pulse extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isHovering: false,\n      host: this.props.host,\n    };\n  }\n\n  handleMouseEnter = () => {\n      this.setState({isHovering:true})\n      this.props.onHover(this.state.host);            \n  }\n\n  handleMouseLeave = () => {\n      this.setState({isHovering:false})         \n  }\n\n  handleRegexTick = (regex) => {\n      console.log(\"Ticking \"+regex)\n      this.props.tickRegex(regex)         \n  }\n\n  render(){\n    let regexes=this.props.regexes\n    let matches=this.props.matches\n    let crawlstate=this.props.crawlstate\n    // testing \n\n    return(\n      <div>\n      <div className=\"CrawlInfo\">\n      <FlexView grow={1} shrink={4}>\n          <div>\n            <h3>Matches Found</h3>\n            <h1>{matches.length}</h1>\n          </div>\n          <verticalLine/>\n          <div>\n            <h3>Repos analysed</h3>\n            <h1>{(crawlstate && crawlstate.length>0)? crawlstate[0].AnalysedRepos.length:0}</h1>\n          </div>\n          <verticalLine/>\n          <div>\n            <h3>Crawling</h3>\n            <h1>{(crawlstate && crawlstate.length>0) ? crawlstate[0].Crawling.length:0}</h1>\n          </div>\n          <verticalLine/>\n          <div>\n            {crawlstate && crawlstate.length>0 && crawlstate[0].Crawling && crawlstate[0].Crawling[0] ?\n              crawlstate.map((task, index) =>\n                task.Crawling.map((repo, index) =>\n                    <div>{repo.Name}</div>\n                )\n              )\n              :\n                \"[repo list]\"\n            } \n          </div>\n          <verticalLine/>\n          <InteractiveForceGraph\n            simulationOptions={{ height: 100, width: 300, animate:true,strength: { collide: 8, } }}\n            labelAttr=\"label\"\n            onSelectNode={(node) => console.log(node)}\n            highlightDependencies\n          >\n            <ForceGraphNode node={{ id: 'org' }} fill='blue' />\n            {crawlstate && crawlstate.length>0 && crawlstate[0].AnalysedRepos && crawlstate[0].AnalysedRepos[0] ? (\n                crawlstate.map((task, index) => \n                  task.AnalysedRepos.map((repo, index) => \n                      <ForceGraphNode node={{ id: repo.Name , label: repo.Name}} fill='red' />\n                  )\n                )\n              )\n             : <ForceGraphNode node={{ id: 'org' }} fill='blue' />\n            }\n            {crawlstate && crawlstate.length>0 && crawlstate[0].AnalysedRepos && crawlstate[0].AnalysedRepos[0] ? (\n                crawlstate.map((task, index) => \n                  task.AnalysedRepos.map((repo, index) => \n                      <ForceGraphLink link={{ source: repo.Name, target: 'org' }} />\n                  )\n                )\n              )\n             : <ForceGraphNode node={{ id: 'org' }} fill='blue' />\n            }\n          </InteractiveForceGraph>\n        </FlexView>\n      </div>\n      </div>\n    )\n/*     return(\n      <div className=\"CrawlInfo\">\n        <h2>Pulse</h2>\n        <FlexView grow={1} shrink={4}>\n          <div>\n            <h3>Matches Found</h3>\n            <h1>{matches.length}</h1>\n          </div>\n          <verticalLine/>\n          <div>\n            <h3>Repos analysed</h3>\n            <h1>{0}</h1>\n          </div>\n          <verticalLine/>\n          {\n              Object.keys(regexes).map((regex) =>\n                  <FilterButton\n                    handleClick={this.handleRegexTick}\n                    reg={regex}\n                    ticked={regexes[regex].Ticked}\n                    count={regexes[regex].Count}\n                    />,\n              )\n          }\n        </FlexView>\n      </div>\n    ) */\n  }\n}\n\nexport default Pulse\n","import React, { Component } from 'react'\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\nimport './index.css'\nimport Debug from './debug/Debug.js'\nimport Matches from './matches/Matches.js'\nimport Pulse from './crawl_info/pulse.js'\n\n// const URL = 'wss://repocrawler:8090/ws';\nconst URL = 'ws://127.0.0.1:8090/ws';\nclass App extends Component {\n  ws = new WebSocket(URL)\n  status=\"disconnected\"\n\n  constructor(props) {\n        super(props);\n        this.state = {\n          name: 'Bob',\n          logs: [{'msg':'Connecting...'}],\n          matches: [],\n          regexes: {},\n          crawlstate: [],\n          selected_match: \"\",\n        }\n  }\n\n  componentDidMount() {\n      this.ws.onopen = () => {\n        // on connecting, do nothing but log it to the consolea\n        console.log('connected')\n        this.submitMessage(\"wat\")\n        this.status=\"connected\"\n      }\n\n      this.ws.onmessage = evt => {\n        // on receiving a message, add it to the list of messages\n        const message = JSON.parse(evt.data)\n        console.log(message)\n        if(message.event==\"debug\"){\n          this.addMessage(message.data)\n          //this.logs.push(message.data)\n          //this.addMessage(message.data)\n        }else if(message.event==\"match\"){\n          this.addMatch(message.data.match)\n        }else if(message.event==\"state\"){\n          this.setCrawlingState(message.data)\n        }\n      }\n\n      this.ws.onclose = () => {\n        console.log('disconnected')\n        //this.addMessage(\"disconnected\")\n        // automatically try to reconnect on connection loss\n        this.setState({\n          ws: new WebSocket(URL),\n        })\n      }\n  }\n  \n  setSelectedMatch = (match) => {\n        this.setState({selected_match: match});\n  }\n\n  tickRegexFilter = (regex) => {\n        this.setState(state => state.regexes[regex].Ticked=!state.regexes[regex].Ticked );\n  }\n\n  addMessage = message =>\n    this.setState(state => state.logs.push(message))\n\n  setCrawlingState = cr =>\n    this.setState(state => state.crawlstate=cr)\n\n  addMatch = match => {\n    this.setState(state => !state.regexes[match.Rule.Regex] ? state.regexes[match.Rule.Regex]={Count:1,Ticked:true} : state.regexes[match.Rule.Regex].Count++)\n    this.setState(state => state.matches.push(match));\n  }\n\n\n  submitMessage = messageString => {\n    const message = { name: this.state.name, message: messageString }\n    this.ws.send(JSON.stringify(message))\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Debug logs={this.state.logs}/>\n        <Pulse\n          regexes={this.state.regexes}\n          tickRegex={this.tickRegexFilter}\n          matches={this.state.matches}\n          crawlstate={this.state.crawlstate}\n          />\n        <Matches filters={this.state.regexes} selectedMatch={this.setSelectedMatch} matches={this.state.matches}/>\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}